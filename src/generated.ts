// Generated by @wagmi/cli@1.3.0 on 7/31/2023 at 9:58:38 AM
import {
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
  Address,
} from 'wagmi'
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// erc721
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc721ABI = [
  {
    type: 'event',
    inputs: [
      { name: 'owner', type: 'address', indexed: true },
      { name: 'spender', type: 'address', indexed: true },
      { name: 'tokenId', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    inputs: [
      { name: 'owner', type: 'address', indexed: true },
      { name: 'operator', type: 'address', indexed: true },
      { name: 'approved', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    inputs: [
      { name: 'from', type: 'address', indexed: true },
      { name: 'to', type: 'address', indexed: true },
      { name: 'tokenId', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'spender', type: 'address' },
      { name: 'tokenId', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', type: 'address' },
      { name: 'operator', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: 'owner', type: 'address' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'from', type: 'address' },
      { name: 'to', type: 'address' },
      { name: 'tokenId', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', type: 'address' },
      { name: 'to', type: 'address' },
      { name: 'id', type: 'uint256' },
      { name: 'data', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', type: 'address' },
      { name: 'approved', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ name: '', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', type: 'address' },
      { name: 'index', type: 'uint256' },
    ],
    name: 'tokenByIndex',
    outputs: [{ name: 'tokenId', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'sender', type: 'address' },
      { name: 'recipient', type: 'address' },
      { name: 'tokeId', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SoundEditionV1_2
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const soundEditionV1_2ABI = [
  { type: 'error', inputs: [], name: 'ApprovalCallerNotOwnerNorApproved' },
  { type: 'error', inputs: [], name: 'ApprovalQueryForNonexistentToken' },
  { type: 'error', inputs: [], name: 'BalanceQueryForZeroAddress' },
  { type: 'error', inputs: [], name: 'CannotBurnImmediately' },
  { type: 'error', inputs: [], name: 'ExceedsAddressBatchMintLimit' },
  {
    type: 'error',
    inputs: [{ name: 'available', internalType: 'uint32', type: 'uint32' }],
    name: 'ExceedsEditionAvailableSupply',
  },
  { type: 'error', inputs: [], name: 'InvalidAmount' },
  { type: 'error', inputs: [], name: 'InvalidEditionMaxMintableRange' },
  { type: 'error', inputs: [], name: 'InvalidFundingRecipient' },
  { type: 'error', inputs: [], name: 'InvalidQueryRange' },
  { type: 'error', inputs: [], name: 'InvalidRandomnessLock' },
  { type: 'error', inputs: [], name: 'InvalidRoyaltyBPS' },
  { type: 'error', inputs: [], name: 'MaximumHasAlreadyBeenReached' },
  { type: 'error', inputs: [], name: 'MetadataIsFrozen' },
  { type: 'error', inputs: [], name: 'MintERC2309QuantityExceedsLimit' },
  { type: 'error', inputs: [], name: 'MintHasConcluded' },
  { type: 'error', inputs: [], name: 'MintNotConcluded' },
  { type: 'error', inputs: [], name: 'MintRandomnessAlreadyRevealed' },
  { type: 'error', inputs: [], name: 'MintToZeroAddress' },
  { type: 'error', inputs: [], name: 'MintZeroQuantity' },
  { type: 'error', inputs: [], name: 'MintsAlreadyExist' },
  { type: 'error', inputs: [], name: 'NewOwnerIsZeroAddress' },
  { type: 'error', inputs: [], name: 'NoAddressesToAirdrop' },
  { type: 'error', inputs: [], name: 'NoHandoverRequest' },
  { type: 'error', inputs: [], name: 'OwnerQueryForNonexistentToken' },
  { type: 'error', inputs: [], name: 'OwnershipNotInitializedForExtraData' },
  { type: 'error', inputs: [], name: 'TokenIdsNotStrictlyAscending' },
  { type: 'error', inputs: [], name: 'TransferCallerNotOwnerNorApproved' },
  { type: 'error', inputs: [], name: 'TransferFromIncorrectOwner' },
  { type: 'error', inputs: [], name: 'TransferToNonERC721ReceiverImplementer' },
  { type: 'error', inputs: [], name: 'TransferToZeroAddress' },
  { type: 'error', inputs: [], name: 'URIQueryForNonexistentToken' },
  { type: 'error', inputs: [], name: 'Unauthorized' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'to',
        internalType: 'address[]',
        type: 'address[]',
        indexed: false,
      },
      {
        name: 'quantity',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'fromTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Airdropped',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'baseURI',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'BaseURISet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'fromTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'toTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'BatchMetadataUpdate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'fromTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'toTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'ConsecutiveTransfer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'contractURI',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'ContractURISet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'recipient',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'tokens',
        internalType: 'address[]',
        type: 'address[]',
        indexed: false,
      },
      {
        name: 'amounts',
        internalType: 'uint256[]',
        type: 'uint256[]',
        indexed: false,
      },
      {
        name: 'caller',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'ERC20Withdrawn',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'recipient',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'caller',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'ETHWithdrawn',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'editionCutoffTime_',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
    ],
    name: 'EditionCutoffTimeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'editionMaxMintableLower_',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      {
        name: 'editionMaxMintableUpper_',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
    ],
    name: 'EditionMaxMintableRangeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'fundingRecipient',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'FundingRecipientSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'metadataModule',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'baseURI',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
      {
        name: 'contractURI',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'MetadataFrozen',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'metadataModule',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'MetadataModuleSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'mintRandomnessEnabled_',
        internalType: 'bool',
        type: 'bool',
        indexed: false,
      },
    ],
    name: 'MintRandomnessEnabledSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'to', internalType: 'address', type: 'address', indexed: false },
      {
        name: 'quantity',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'fromTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Minted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'operatorFilteringEnabled_',
        internalType: 'bool',
        type: 'bool',
        indexed: false,
      },
    ],
    name: 'OperatorFilteringEnablededSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'pendingOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipHandoverCanceled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'pendingOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipHandoverRequested',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'roles',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'RolesUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'bps', internalType: 'uint16', type: 'uint16', indexed: false },
    ],
    name: 'RoyaltySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'sam_',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SAMSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'edition_',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'name_', internalType: 'string', type: 'string', indexed: false },
      {
        name: 'symbol_',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
      {
        name: 'metadataModule_',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'baseURI_',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
      {
        name: 'contractURI_',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
      {
        name: 'fundingRecipient_',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'royaltyBPS_',
        internalType: 'uint16',
        type: 'uint16',
        indexed: false,
      },
      {
        name: 'editionMaxMintableLower_',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      {
        name: 'editionMaxMintableUpper_',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      {
        name: 'editionCutoffTime_',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      { name: 'flags_', internalType: 'uint8', type: 'uint8', indexed: false },
    ],
    name: 'SoundEditionInitialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ADMIN_ROLE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'METADATA_IS_FROZEN_FLAG',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MINTER_ROLE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MINT_RANDOMNESS_ENABLED_FLAG',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'OPERATOR_FILTERING_ENABLED_FLAG',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address[]', type: 'address[]' },
      { name: 'quantity', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'airdrop',
    outputs: [
      { name: 'fromTokenId', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'baseURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [],
    name: 'cancelOwnershipHandover',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'pendingOwner', internalType: 'address', type: 'address' },
    ],
    name: 'completeOwnershipHandover',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'contractURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'editionCutoffTime',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'editionInfo',
    outputs: [
      {
        name: 'info',
        internalType: 'struct EditionInfo',
        type: 'tuple',
        components: [
          { name: 'baseURI', internalType: 'string', type: 'string' },
          { name: 'contractURI', internalType: 'string', type: 'string' },
          { name: 'name', internalType: 'string', type: 'string' },
          { name: 'symbol', internalType: 'string', type: 'string' },
          {
            name: 'fundingRecipient',
            internalType: 'address',
            type: 'address',
          },
          {
            name: 'editionMaxMintable',
            internalType: 'uint32',
            type: 'uint32',
          },
          {
            name: 'editionMaxMintableUpper',
            internalType: 'uint32',
            type: 'uint32',
          },
          {
            name: 'editionMaxMintableLower',
            internalType: 'uint32',
            type: 'uint32',
          },
          { name: 'editionCutoffTime', internalType: 'uint32', type: 'uint32' },
          { name: 'metadataModule', internalType: 'address', type: 'address' },
          { name: 'mintRandomness', internalType: 'uint256', type: 'uint256' },
          { name: 'royaltyBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'mintRandomnessEnabled', internalType: 'bool', type: 'bool' },
          { name: 'mintConcluded', internalType: 'bool', type: 'bool' },
          { name: 'isMetadataFrozen', internalType: 'bool', type: 'bool' },
          { name: 'nextTokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'totalBurned', internalType: 'uint256', type: 'uint256' },
          { name: 'totalMinted', internalType: 'uint256', type: 'uint256' },
          { name: 'totalSupply', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'editionMaxMintable',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'editionMaxMintableLower',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'editionMaxMintableUpper',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'emitAllMetadataUpdate',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'explicitOwnershipOf',
    outputs: [
      {
        name: 'ownership',
        internalType: 'struct IERC721AUpgradeable.TokenOwnership',
        type: 'tuple',
        components: [
          { name: 'addr', internalType: 'address', type: 'address' },
          { name: 'startTimestamp', internalType: 'uint64', type: 'uint64' },
          { name: 'burned', internalType: 'bool', type: 'bool' },
          { name: 'extraData', internalType: 'uint24', type: 'uint24' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'explicitOwnershipsOf',
    outputs: [
      {
        name: '',
        internalType: 'struct IERC721AUpgradeable.TokenOwnership[]',
        type: 'tuple[]',
        components: [
          { name: 'addr', internalType: 'address', type: 'address' },
          { name: 'startTimestamp', internalType: 'uint64', type: 'uint64' },
          { name: 'burned', internalType: 'bool', type: 'bool' },
          { name: 'extraData', internalType: 'uint24', type: 'uint24' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'freezeMetadata',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'fundingRecipient',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRoles',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasAllRoles',
    outputs: [{ name: 'result', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasAnyRole',
    outputs: [{ name: 'result', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'name_', internalType: 'string', type: 'string' },
      { name: 'symbol_', internalType: 'string', type: 'string' },
      { name: 'metadataModule_', internalType: 'address', type: 'address' },
      { name: 'baseURI_', internalType: 'string', type: 'string' },
      { name: 'contractURI_', internalType: 'string', type: 'string' },
      { name: 'fundingRecipient_', internalType: 'address', type: 'address' },
      { name: 'royaltyBPS_', internalType: 'uint16', type: 'uint16' },
      {
        name: 'editionMaxMintableLower_',
        internalType: 'uint32',
        type: 'uint32',
      },
      {
        name: 'editionMaxMintableUpper_',
        internalType: 'uint32',
        type: 'uint32',
      },
      { name: 'editionCutoffTime_', internalType: 'uint32', type: 'uint32' },
      { name: 'flags_', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isMetadataFrozen',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'metadataModule',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'quantity', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [
      { name: 'fromTokenId', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'mintConcluded',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'mintRandomness',
    outputs: [{ name: 'result', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'mintRandomnessEnabled',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nextTokenId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'numberBurned',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'numberMinted',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'operatorFilteringEnabled',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
    name: 'ordinalsFromRoles',
    outputs: [{ name: 'ordinals', internalType: 'uint8[]', type: 'uint8[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: 'result', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'pendingOwner', internalType: 'address', type: 'address' },
    ],
    name: 'ownershipHandoverExpiresAt',
    outputs: [{ name: 'result', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ownershipHandoverValidFor',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
    name: 'renounceRoles',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [],
    name: 'requestOwnershipHandover',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRoles',
    outputs: [],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'ordinals', internalType: 'uint8[]', type: 'uint8[]' }],
    name: 'rolesFromOrdinals',
    outputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'user', internalType: 'address', type: 'address' }],
    name: 'rolesOf',
    outputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'royaltyBPS',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: 'salePrice', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'royaltyInfo',
    outputs: [
      { name: 'fundingRecipient_', internalType: 'address', type: 'address' },
      { name: 'royaltyAmount', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'sam',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'burner', internalType: 'address', type: 'address' },
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'samBurn',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'quantity', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'samMint',
    outputs: [
      { name: 'fromTokenId', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'baseURI_', internalType: 'string', type: 'string' }],
    name: 'setBaseURI',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'contractURI_', internalType: 'string', type: 'string' }],
    name: 'setContractURI',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'editionCutoffTime_', internalType: 'uint32', type: 'uint32' },
    ],
    name: 'setEditionCutoffTime',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'editionMaxMintableLower_',
        internalType: 'uint32',
        type: 'uint32',
      },
      {
        name: 'editionMaxMintableUpper_',
        internalType: 'uint32',
        type: 'uint32',
      },
    ],
    name: 'setEditionMaxMintableRange',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'fundingRecipient_', internalType: 'address', type: 'address' },
    ],
    name: 'setFundingRecipient',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'metadataModule_', internalType: 'address', type: 'address' },
    ],
    name: 'setMetadataModule',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'mintRandomnessEnabled_', internalType: 'bool', type: 'bool' },
    ],
    name: 'setMintRandomnessEnabled',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operatorFilteringEnabled_', internalType: 'bool', type: 'bool' },
    ],
    name: 'setOperatorFilteringEnabled',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'royaltyBPS_', internalType: 'uint16', type: 'uint16' }],
    name: 'setRoyalty',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'sam_', internalType: 'address', type: 'address' }],
    name: 'setSAM',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'tokensOfOwner',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'start', internalType: 'uint256', type: 'uint256' },
      { name: 'stop', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'tokensOfOwnerIn',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalBurned',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalMinted',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'tokens', internalType: 'address[]', type: 'address[]' }],
    name: 'withdrawERC20',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'withdrawETH',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TokenboundRegistry
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x02101dfB77FDE026414827Fdc604ddAF224F0921)
 */
export const tokenboundRegistryABI = [
  { type: 'error', inputs: [], name: 'InitializationFailed' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'chainId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'tokenContract',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'salt',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AccountCreated',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'tokenContract', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'salt', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'account',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'tokenContract', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'salt', internalType: 'uint256', type: 'uint256' },
      { name: 'initData', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'createAccount',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
] as const

/**
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x02101dfB77FDE026414827Fdc604ddAF224F0921)
 */
export const tokenboundRegistryAddress = {
  10: '0x02101dfB77FDE026414827Fdc604ddAF224F0921',
} as const

/**
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x02101dfB77FDE026414827Fdc604ddAF224F0921)
 */
export const tokenboundRegistryConfig = {
  address: tokenboundRegistryAddress,
  abi: tokenboundRegistryABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TokenboundAccount
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2d25602551487c3f3354dd80d76d54383a243358)
 */
export const tokenboundAccountABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      {
        name: '_defaultImplementation',
        internalType: 'address',
        type: 'address',
      },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AdminChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'beacon',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'BeaconUpgraded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Upgraded',
  },
  { stateMutability: 'payable', type: 'fallback' },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'initialize',
    outputs: [],
  },
  { stateMutability: 'payable', type: 'receive' },
] as const

/**
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2d25602551487c3f3354dd80d76d54383a243358)
 */
export const tokenboundAccountAddress = {
  10: '0x2D25602551487C3f3354dD80D76D54383A243358',
} as const

/**
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2d25602551487c3f3354dd80d76d54383a243358)
 */
export const tokenboundAccountConfig = {
  address: tokenboundAccountAddress,
  abi: tokenboundAccountABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__.
 */
export function useErc721Read<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof erc721ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>,
    'abi'
  > = {} as any,
) {
  return useContractRead({ abi: erc721ABI, ...config } as UseContractReadConfig<
    typeof erc721ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useErc721BalanceOf<
  TFunctionName extends 'balanceOf',
  TSelectData = ReadContractResult<typeof erc721ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"getApproved"`.
 */
export function useErc721GetApproved<
  TFunctionName extends 'getApproved',
  TSelectData = ReadContractResult<typeof erc721ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"isApprovedForAll"`.
 */
export function useErc721IsApprovedForAll<
  TFunctionName extends 'isApprovedForAll',
  TSelectData = ReadContractResult<typeof erc721ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"name"`.
 */
export function useErc721Name<
  TFunctionName extends 'name',
  TSelectData = ReadContractResult<typeof erc721ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"ownerOf"`.
 */
export function useErc721OwnerOf<
  TFunctionName extends 'ownerOf',
  TSelectData = ReadContractResult<typeof erc721ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"symbol"`.
 */
export function useErc721Symbol<
  TFunctionName extends 'symbol',
  TSelectData = ReadContractResult<typeof erc721ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"tokenByIndex"`.
 */
export function useErc721TokenByIndex<
  TFunctionName extends 'tokenByIndex',
  TSelectData = ReadContractResult<typeof erc721ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"tokenURI"`.
 */
export function useErc721TokenUri<
  TFunctionName extends 'tokenURI',
  TSelectData = ReadContractResult<typeof erc721ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useErc721TotalSupply<
  TFunctionName extends 'totalSupply',
  TSelectData = ReadContractResult<typeof erc721ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc721ABI}__.
 */
export function useErc721Write<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof erc721ABI, string>['request']['abi'],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<typeof erc721ABI, TFunctionName, TMode> & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<typeof erc721ABI, TFunctionName, TMode>({
    abi: erc721ABI,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"approve"`.
 */
export function useErc721Approve<TMode extends WriteContractMode = undefined>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof erc721ABI,
          'approve'
        >['request']['abi'],
        'approve',
        TMode
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<typeof erc721ABI, 'approve', TMode> & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<typeof erc721ABI, 'approve', TMode>({
    abi: erc721ABI,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function useErc721SafeTransferFrom<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof erc721ABI,
          'safeTransferFrom'
        >['request']['abi'],
        'safeTransferFrom',
        TMode
      > & { functionName?: 'safeTransferFrom' }
    : UseContractWriteConfig<typeof erc721ABI, 'safeTransferFrom', TMode> & {
        abi?: never
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof erc721ABI, 'safeTransferFrom', TMode>({
    abi: erc721ABI,
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function useErc721SetApprovalForAll<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof erc721ABI,
          'setApprovalForAll'
        >['request']['abi'],
        'setApprovalForAll',
        TMode
      > & { functionName?: 'setApprovalForAll' }
    : UseContractWriteConfig<typeof erc721ABI, 'setApprovalForAll', TMode> & {
        abi?: never
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<typeof erc721ABI, 'setApprovalForAll', TMode>({
    abi: erc721ABI,
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useErc721TransferFrom<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof erc721ABI,
          'transferFrom'
        >['request']['abi'],
        'transferFrom',
        TMode
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<typeof erc721ABI, 'transferFrom', TMode> & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof erc721ABI, 'transferFrom', TMode>({
    abi: erc721ABI,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc721ABI}__.
 */
export function usePrepareErc721Write<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc721ABI, TFunctionName>,
    'abi'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc721ABI,
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc721ABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareErc721Approve(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc721ABI, 'approve'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc721ABI,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc721ABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function usePrepareErc721SafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc721ABI, 'safeTransferFrom'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc721ABI,
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc721ABI, 'safeTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function usePrepareErc721SetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc721ABI, 'setApprovalForAll'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc721ABI,
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc721ABI, 'setApprovalForAll'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareErc721TransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc721ABI, 'transferFrom'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc721ABI,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc721ABI, 'transferFrom'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc721ABI}__.
 */
export function useErc721Event<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof erc721ABI, TEventName>,
    'abi'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc721ABI,
    ...config,
  } as UseContractEventConfig<typeof erc721ABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc721ABI}__ and `eventName` set to `"Approval"`.
 */
export function useErc721ApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof erc721ABI, 'Approval'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc721ABI,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof erc721ABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc721ABI}__ and `eventName` set to `"ApprovalForAll"`.
 */
export function useErc721ApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<typeof erc721ABI, 'ApprovalForAll'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc721ABI,
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof erc721ABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc721ABI}__ and `eventName` set to `"Transfer"`.
 */
export function useErc721TransferEvent(
  config: Omit<
    UseContractEventConfig<typeof erc721ABI, 'Transfer'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc721ABI,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof erc721ABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__.
 */
export function useSoundEditionV1_2Read<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"ADMIN_ROLE"`.
 */
export function useSoundEditionV1_2AdminRole<
  TFunctionName extends 'ADMIN_ROLE',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'ADMIN_ROLE',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"METADATA_IS_FROZEN_FLAG"`.
 */
export function useSoundEditionV1_2MetadataIsFrozenFlag<
  TFunctionName extends 'METADATA_IS_FROZEN_FLAG',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'METADATA_IS_FROZEN_FLAG',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"MINTER_ROLE"`.
 */
export function useSoundEditionV1_2MinterRole<
  TFunctionName extends 'MINTER_ROLE',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'MINTER_ROLE',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"MINT_RANDOMNESS_ENABLED_FLAG"`.
 */
export function useSoundEditionV1_2MintRandomnessEnabledFlag<
  TFunctionName extends 'MINT_RANDOMNESS_ENABLED_FLAG',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'MINT_RANDOMNESS_ENABLED_FLAG',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"OPERATOR_FILTERING_ENABLED_FLAG"`.
 */
export function useSoundEditionV1_2OperatorFilteringEnabledFlag<
  TFunctionName extends 'OPERATOR_FILTERING_ENABLED_FLAG',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'OPERATOR_FILTERING_ENABLED_FLAG',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useSoundEditionV1_2BalanceOf<
  TFunctionName extends 'balanceOf',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"baseURI"`.
 */
export function useSoundEditionV1_2BaseUri<
  TFunctionName extends 'baseURI',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'baseURI',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"contractURI"`.
 */
export function useSoundEditionV1_2ContractUri<
  TFunctionName extends 'contractURI',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'contractURI',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"editionCutoffTime"`.
 */
export function useSoundEditionV1_2EditionCutoffTime<
  TFunctionName extends 'editionCutoffTime',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'editionCutoffTime',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"editionInfo"`.
 */
export function useSoundEditionV1_2EditionInfo<
  TFunctionName extends 'editionInfo',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'editionInfo',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"editionMaxMintable"`.
 */
export function useSoundEditionV1_2EditionMaxMintable<
  TFunctionName extends 'editionMaxMintable',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'editionMaxMintable',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"editionMaxMintableLower"`.
 */
export function useSoundEditionV1_2EditionMaxMintableLower<
  TFunctionName extends 'editionMaxMintableLower',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'editionMaxMintableLower',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"editionMaxMintableUpper"`.
 */
export function useSoundEditionV1_2EditionMaxMintableUpper<
  TFunctionName extends 'editionMaxMintableUpper',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'editionMaxMintableUpper',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"explicitOwnershipOf"`.
 */
export function useSoundEditionV1_2ExplicitOwnershipOf<
  TFunctionName extends 'explicitOwnershipOf',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'explicitOwnershipOf',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"explicitOwnershipsOf"`.
 */
export function useSoundEditionV1_2ExplicitOwnershipsOf<
  TFunctionName extends 'explicitOwnershipsOf',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'explicitOwnershipsOf',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"fundingRecipient"`.
 */
export function useSoundEditionV1_2FundingRecipient<
  TFunctionName extends 'fundingRecipient',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'fundingRecipient',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"getApproved"`.
 */
export function useSoundEditionV1_2GetApproved<
  TFunctionName extends 'getApproved',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"hasAllRoles"`.
 */
export function useSoundEditionV1_2HasAllRoles<
  TFunctionName extends 'hasAllRoles',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'hasAllRoles',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"hasAnyRole"`.
 */
export function useSoundEditionV1_2HasAnyRole<
  TFunctionName extends 'hasAnyRole',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'hasAnyRole',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"isApprovedForAll"`.
 */
export function useSoundEditionV1_2IsApprovedForAll<
  TFunctionName extends 'isApprovedForAll',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"isMetadataFrozen"`.
 */
export function useSoundEditionV1_2IsMetadataFrozen<
  TFunctionName extends 'isMetadataFrozen',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'isMetadataFrozen',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"metadataModule"`.
 */
export function useSoundEditionV1_2MetadataModule<
  TFunctionName extends 'metadataModule',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'metadataModule',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"mintConcluded"`.
 */
export function useSoundEditionV1_2MintConcluded<
  TFunctionName extends 'mintConcluded',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'mintConcluded',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"mintRandomness"`.
 */
export function useSoundEditionV1_2MintRandomness<
  TFunctionName extends 'mintRandomness',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'mintRandomness',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"mintRandomnessEnabled"`.
 */
export function useSoundEditionV1_2MintRandomnessEnabled<
  TFunctionName extends 'mintRandomnessEnabled',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'mintRandomnessEnabled',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"name"`.
 */
export function useSoundEditionV1_2Name<
  TFunctionName extends 'name',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"nextTokenId"`.
 */
export function useSoundEditionV1_2NextTokenId<
  TFunctionName extends 'nextTokenId',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'nextTokenId',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"numberBurned"`.
 */
export function useSoundEditionV1_2NumberBurned<
  TFunctionName extends 'numberBurned',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'numberBurned',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"numberMinted"`.
 */
export function useSoundEditionV1_2NumberMinted<
  TFunctionName extends 'numberMinted',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'numberMinted',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"operatorFilteringEnabled"`.
 */
export function useSoundEditionV1_2OperatorFilteringEnabled<
  TFunctionName extends 'operatorFilteringEnabled',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'operatorFilteringEnabled',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"ordinalsFromRoles"`.
 */
export function useSoundEditionV1_2OrdinalsFromRoles<
  TFunctionName extends 'ordinalsFromRoles',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'ordinalsFromRoles',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"owner"`.
 */
export function useSoundEditionV1_2Owner<
  TFunctionName extends 'owner',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"ownerOf"`.
 */
export function useSoundEditionV1_2OwnerOf<
  TFunctionName extends 'ownerOf',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"ownershipHandoverExpiresAt"`.
 */
export function useSoundEditionV1_2OwnershipHandoverExpiresAt<
  TFunctionName extends 'ownershipHandoverExpiresAt',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'ownershipHandoverExpiresAt',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"ownershipHandoverValidFor"`.
 */
export function useSoundEditionV1_2OwnershipHandoverValidFor<
  TFunctionName extends 'ownershipHandoverValidFor',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'ownershipHandoverValidFor',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"rolesFromOrdinals"`.
 */
export function useSoundEditionV1_2RolesFromOrdinals<
  TFunctionName extends 'rolesFromOrdinals',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'rolesFromOrdinals',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"rolesOf"`.
 */
export function useSoundEditionV1_2RolesOf<
  TFunctionName extends 'rolesOf',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'rolesOf',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"royaltyBPS"`.
 */
export function useSoundEditionV1_2RoyaltyBps<
  TFunctionName extends 'royaltyBPS',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'royaltyBPS',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"royaltyInfo"`.
 */
export function useSoundEditionV1_2RoyaltyInfo<
  TFunctionName extends 'royaltyInfo',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'royaltyInfo',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"sam"`.
 */
export function useSoundEditionV1_2Sam<
  TFunctionName extends 'sam',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'sam',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"supportsInterface"`.
 */
export function useSoundEditionV1_2SupportsInterface<
  TFunctionName extends 'supportsInterface',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"symbol"`.
 */
export function useSoundEditionV1_2Symbol<
  TFunctionName extends 'symbol',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"tokenURI"`.
 */
export function useSoundEditionV1_2TokenUri<
  TFunctionName extends 'tokenURI',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"tokensOfOwner"`.
 */
export function useSoundEditionV1_2TokensOfOwner<
  TFunctionName extends 'tokensOfOwner',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'tokensOfOwner',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"tokensOfOwnerIn"`.
 */
export function useSoundEditionV1_2TokensOfOwnerIn<
  TFunctionName extends 'tokensOfOwnerIn',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'tokensOfOwnerIn',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"totalBurned"`.
 */
export function useSoundEditionV1_2TotalBurned<
  TFunctionName extends 'totalBurned',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'totalBurned',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"totalMinted"`.
 */
export function useSoundEditionV1_2TotalMinted<
  TFunctionName extends 'totalMinted',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'totalMinted',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useSoundEditionV1_2TotalSupply<
  TFunctionName extends 'totalSupply',
  TSelectData = ReadContractResult<typeof soundEditionV1_2ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof soundEditionV1_2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: soundEditionV1_2ABI,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof soundEditionV1_2ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__.
 */
export function useSoundEditionV1_2Write<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          string
        >['request']['abi'],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        TFunctionName,
        TMode
      > & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, TFunctionName, TMode>({
    abi: soundEditionV1_2ABI,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"airdrop"`.
 */
export function useSoundEditionV1_2Airdrop<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'airdrop'
        >['request']['abi'],
        'airdrop',
        TMode
      > & { functionName?: 'airdrop' }
    : UseContractWriteConfig<typeof soundEditionV1_2ABI, 'airdrop', TMode> & {
        abi?: never
        functionName?: 'airdrop'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'airdrop', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'airdrop',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"approve"`.
 */
export function useSoundEditionV1_2Approve<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'approve'
        >['request']['abi'],
        'approve',
        TMode
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<typeof soundEditionV1_2ABI, 'approve', TMode> & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'approve', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"burn"`.
 */
export function useSoundEditionV1_2Burn<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'burn'
        >['request']['abi'],
        'burn',
        TMode
      > & { functionName?: 'burn' }
    : UseContractWriteConfig<typeof soundEditionV1_2ABI, 'burn', TMode> & {
        abi?: never
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'burn', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"cancelOwnershipHandover"`.
 */
export function useSoundEditionV1_2CancelOwnershipHandover<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'cancelOwnershipHandover'
        >['request']['abi'],
        'cancelOwnershipHandover',
        TMode
      > & { functionName?: 'cancelOwnershipHandover' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'cancelOwnershipHandover',
        TMode
      > & {
        abi?: never
        functionName?: 'cancelOwnershipHandover'
      } = {} as any,
) {
  return useContractWrite<
    typeof soundEditionV1_2ABI,
    'cancelOwnershipHandover',
    TMode
  >({
    abi: soundEditionV1_2ABI,
    functionName: 'cancelOwnershipHandover',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"completeOwnershipHandover"`.
 */
export function useSoundEditionV1_2CompleteOwnershipHandover<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'completeOwnershipHandover'
        >['request']['abi'],
        'completeOwnershipHandover',
        TMode
      > & { functionName?: 'completeOwnershipHandover' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'completeOwnershipHandover',
        TMode
      > & {
        abi?: never
        functionName?: 'completeOwnershipHandover'
      } = {} as any,
) {
  return useContractWrite<
    typeof soundEditionV1_2ABI,
    'completeOwnershipHandover',
    TMode
  >({
    abi: soundEditionV1_2ABI,
    functionName: 'completeOwnershipHandover',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"emitAllMetadataUpdate"`.
 */
export function useSoundEditionV1_2EmitAllMetadataUpdate<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'emitAllMetadataUpdate'
        >['request']['abi'],
        'emitAllMetadataUpdate',
        TMode
      > & { functionName?: 'emitAllMetadataUpdate' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'emitAllMetadataUpdate',
        TMode
      > & {
        abi?: never
        functionName?: 'emitAllMetadataUpdate'
      } = {} as any,
) {
  return useContractWrite<
    typeof soundEditionV1_2ABI,
    'emitAllMetadataUpdate',
    TMode
  >({
    abi: soundEditionV1_2ABI,
    functionName: 'emitAllMetadataUpdate',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"freezeMetadata"`.
 */
export function useSoundEditionV1_2FreezeMetadata<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'freezeMetadata'
        >['request']['abi'],
        'freezeMetadata',
        TMode
      > & { functionName?: 'freezeMetadata' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'freezeMetadata',
        TMode
      > & {
        abi?: never
        functionName?: 'freezeMetadata'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'freezeMetadata', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'freezeMetadata',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"grantRoles"`.
 */
export function useSoundEditionV1_2GrantRoles<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'grantRoles'
        >['request']['abi'],
        'grantRoles',
        TMode
      > & { functionName?: 'grantRoles' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'grantRoles',
        TMode
      > & {
        abi?: never
        functionName?: 'grantRoles'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'grantRoles', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'grantRoles',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"initialize"`.
 */
export function useSoundEditionV1_2Initialize<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'initialize'
        >['request']['abi'],
        'initialize',
        TMode
      > & { functionName?: 'initialize' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'initialize',
        TMode
      > & {
        abi?: never
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'initialize', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"mint"`.
 */
export function useSoundEditionV1_2Mint<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'mint'
        >['request']['abi'],
        'mint',
        TMode
      > & { functionName?: 'mint' }
    : UseContractWriteConfig<typeof soundEditionV1_2ABI, 'mint', TMode> & {
        abi?: never
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'mint', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"renounceOwnership"`.
 */
export function useSoundEditionV1_2RenounceOwnership<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'renounceOwnership'
        >['request']['abi'],
        'renounceOwnership',
        TMode
      > & { functionName?: 'renounceOwnership' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'renounceOwnership',
        TMode
      > & {
        abi?: never
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<
    typeof soundEditionV1_2ABI,
    'renounceOwnership',
    TMode
  >({
    abi: soundEditionV1_2ABI,
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"renounceRoles"`.
 */
export function useSoundEditionV1_2RenounceRoles<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'renounceRoles'
        >['request']['abi'],
        'renounceRoles',
        TMode
      > & { functionName?: 'renounceRoles' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'renounceRoles',
        TMode
      > & {
        abi?: never
        functionName?: 'renounceRoles'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'renounceRoles', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'renounceRoles',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"requestOwnershipHandover"`.
 */
export function useSoundEditionV1_2RequestOwnershipHandover<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'requestOwnershipHandover'
        >['request']['abi'],
        'requestOwnershipHandover',
        TMode
      > & { functionName?: 'requestOwnershipHandover' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'requestOwnershipHandover',
        TMode
      > & {
        abi?: never
        functionName?: 'requestOwnershipHandover'
      } = {} as any,
) {
  return useContractWrite<
    typeof soundEditionV1_2ABI,
    'requestOwnershipHandover',
    TMode
  >({
    abi: soundEditionV1_2ABI,
    functionName: 'requestOwnershipHandover',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"revokeRoles"`.
 */
export function useSoundEditionV1_2RevokeRoles<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'revokeRoles'
        >['request']['abi'],
        'revokeRoles',
        TMode
      > & { functionName?: 'revokeRoles' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'revokeRoles',
        TMode
      > & {
        abi?: never
        functionName?: 'revokeRoles'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'revokeRoles', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'revokeRoles',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function useSoundEditionV1_2SafeTransferFrom<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'safeTransferFrom'
        >['request']['abi'],
        'safeTransferFrom',
        TMode
      > & { functionName?: 'safeTransferFrom' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'safeTransferFrom',
        TMode
      > & {
        abi?: never
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<
    typeof soundEditionV1_2ABI,
    'safeTransferFrom',
    TMode
  >({
    abi: soundEditionV1_2ABI,
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"samBurn"`.
 */
export function useSoundEditionV1_2SamBurn<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'samBurn'
        >['request']['abi'],
        'samBurn',
        TMode
      > & { functionName?: 'samBurn' }
    : UseContractWriteConfig<typeof soundEditionV1_2ABI, 'samBurn', TMode> & {
        abi?: never
        functionName?: 'samBurn'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'samBurn', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'samBurn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"samMint"`.
 */
export function useSoundEditionV1_2SamMint<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'samMint'
        >['request']['abi'],
        'samMint',
        TMode
      > & { functionName?: 'samMint' }
    : UseContractWriteConfig<typeof soundEditionV1_2ABI, 'samMint', TMode> & {
        abi?: never
        functionName?: 'samMint'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'samMint', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'samMint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function useSoundEditionV1_2SetApprovalForAll<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'setApprovalForAll'
        >['request']['abi'],
        'setApprovalForAll',
        TMode
      > & { functionName?: 'setApprovalForAll' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'setApprovalForAll',
        TMode
      > & {
        abi?: never
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<
    typeof soundEditionV1_2ABI,
    'setApprovalForAll',
    TMode
  >({
    abi: soundEditionV1_2ABI,
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setBaseURI"`.
 */
export function useSoundEditionV1_2SetBaseUri<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'setBaseURI'
        >['request']['abi'],
        'setBaseURI',
        TMode
      > & { functionName?: 'setBaseURI' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'setBaseURI',
        TMode
      > & {
        abi?: never
        functionName?: 'setBaseURI'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'setBaseURI', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'setBaseURI',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setContractURI"`.
 */
export function useSoundEditionV1_2SetContractUri<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'setContractURI'
        >['request']['abi'],
        'setContractURI',
        TMode
      > & { functionName?: 'setContractURI' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'setContractURI',
        TMode
      > & {
        abi?: never
        functionName?: 'setContractURI'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'setContractURI', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'setContractURI',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setEditionCutoffTime"`.
 */
export function useSoundEditionV1_2SetEditionCutoffTime<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'setEditionCutoffTime'
        >['request']['abi'],
        'setEditionCutoffTime',
        TMode
      > & { functionName?: 'setEditionCutoffTime' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'setEditionCutoffTime',
        TMode
      > & {
        abi?: never
        functionName?: 'setEditionCutoffTime'
      } = {} as any,
) {
  return useContractWrite<
    typeof soundEditionV1_2ABI,
    'setEditionCutoffTime',
    TMode
  >({
    abi: soundEditionV1_2ABI,
    functionName: 'setEditionCutoffTime',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setEditionMaxMintableRange"`.
 */
export function useSoundEditionV1_2SetEditionMaxMintableRange<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'setEditionMaxMintableRange'
        >['request']['abi'],
        'setEditionMaxMintableRange',
        TMode
      > & { functionName?: 'setEditionMaxMintableRange' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'setEditionMaxMintableRange',
        TMode
      > & {
        abi?: never
        functionName?: 'setEditionMaxMintableRange'
      } = {} as any,
) {
  return useContractWrite<
    typeof soundEditionV1_2ABI,
    'setEditionMaxMintableRange',
    TMode
  >({
    abi: soundEditionV1_2ABI,
    functionName: 'setEditionMaxMintableRange',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setFundingRecipient"`.
 */
export function useSoundEditionV1_2SetFundingRecipient<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'setFundingRecipient'
        >['request']['abi'],
        'setFundingRecipient',
        TMode
      > & { functionName?: 'setFundingRecipient' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'setFundingRecipient',
        TMode
      > & {
        abi?: never
        functionName?: 'setFundingRecipient'
      } = {} as any,
) {
  return useContractWrite<
    typeof soundEditionV1_2ABI,
    'setFundingRecipient',
    TMode
  >({
    abi: soundEditionV1_2ABI,
    functionName: 'setFundingRecipient',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setMetadataModule"`.
 */
export function useSoundEditionV1_2SetMetadataModule<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'setMetadataModule'
        >['request']['abi'],
        'setMetadataModule',
        TMode
      > & { functionName?: 'setMetadataModule' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'setMetadataModule',
        TMode
      > & {
        abi?: never
        functionName?: 'setMetadataModule'
      } = {} as any,
) {
  return useContractWrite<
    typeof soundEditionV1_2ABI,
    'setMetadataModule',
    TMode
  >({
    abi: soundEditionV1_2ABI,
    functionName: 'setMetadataModule',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setMintRandomnessEnabled"`.
 */
export function useSoundEditionV1_2SetMintRandomnessEnabled<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'setMintRandomnessEnabled'
        >['request']['abi'],
        'setMintRandomnessEnabled',
        TMode
      > & { functionName?: 'setMintRandomnessEnabled' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'setMintRandomnessEnabled',
        TMode
      > & {
        abi?: never
        functionName?: 'setMintRandomnessEnabled'
      } = {} as any,
) {
  return useContractWrite<
    typeof soundEditionV1_2ABI,
    'setMintRandomnessEnabled',
    TMode
  >({
    abi: soundEditionV1_2ABI,
    functionName: 'setMintRandomnessEnabled',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setOperatorFilteringEnabled"`.
 */
export function useSoundEditionV1_2SetOperatorFilteringEnabled<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'setOperatorFilteringEnabled'
        >['request']['abi'],
        'setOperatorFilteringEnabled',
        TMode
      > & { functionName?: 'setOperatorFilteringEnabled' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'setOperatorFilteringEnabled',
        TMode
      > & {
        abi?: never
        functionName?: 'setOperatorFilteringEnabled'
      } = {} as any,
) {
  return useContractWrite<
    typeof soundEditionV1_2ABI,
    'setOperatorFilteringEnabled',
    TMode
  >({
    abi: soundEditionV1_2ABI,
    functionName: 'setOperatorFilteringEnabled',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setRoyalty"`.
 */
export function useSoundEditionV1_2SetRoyalty<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'setRoyalty'
        >['request']['abi'],
        'setRoyalty',
        TMode
      > & { functionName?: 'setRoyalty' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'setRoyalty',
        TMode
      > & {
        abi?: never
        functionName?: 'setRoyalty'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'setRoyalty', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'setRoyalty',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setSAM"`.
 */
export function useSoundEditionV1_2SetSam<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'setSAM'
        >['request']['abi'],
        'setSAM',
        TMode
      > & { functionName?: 'setSAM' }
    : UseContractWriteConfig<typeof soundEditionV1_2ABI, 'setSAM', TMode> & {
        abi?: never
        functionName?: 'setSAM'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'setSAM', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'setSAM',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useSoundEditionV1_2TransferFrom<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'transferFrom'
        >['request']['abi'],
        'transferFrom',
        TMode
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'transferFrom',
        TMode
      > & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'transferFrom', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"transferOwnership"`.
 */
export function useSoundEditionV1_2TransferOwnership<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'transferOwnership'
        >['request']['abi'],
        'transferOwnership',
        TMode
      > & { functionName?: 'transferOwnership' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'transferOwnership',
        TMode
      > & {
        abi?: never
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<
    typeof soundEditionV1_2ABI,
    'transferOwnership',
    TMode
  >({
    abi: soundEditionV1_2ABI,
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"withdrawERC20"`.
 */
export function useSoundEditionV1_2WithdrawErc20<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'withdrawERC20'
        >['request']['abi'],
        'withdrawERC20',
        TMode
      > & { functionName?: 'withdrawERC20' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'withdrawERC20',
        TMode
      > & {
        abi?: never
        functionName?: 'withdrawERC20'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'withdrawERC20', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'withdrawERC20',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"withdrawETH"`.
 */
export function useSoundEditionV1_2WithdrawEth<
  TMode extends WriteContractMode = undefined,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof soundEditionV1_2ABI,
          'withdrawETH'
        >['request']['abi'],
        'withdrawETH',
        TMode
      > & { functionName?: 'withdrawETH' }
    : UseContractWriteConfig<
        typeof soundEditionV1_2ABI,
        'withdrawETH',
        TMode
      > & {
        abi?: never
        functionName?: 'withdrawETH'
      } = {} as any,
) {
  return useContractWrite<typeof soundEditionV1_2ABI, 'withdrawETH', TMode>({
    abi: soundEditionV1_2ABI,
    functionName: 'withdrawETH',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__.
 */
export function usePrepareSoundEditionV1_2Write<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, TFunctionName>,
    'abi'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    ...config,
  } as UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"airdrop"`.
 */
export function usePrepareSoundEditionV1_2Airdrop(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'airdrop'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'airdrop',
    ...config,
  } as UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'airdrop'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareSoundEditionV1_2Approve(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'approve'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"burn"`.
 */
export function usePrepareSoundEditionV1_2Burn(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'burn'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'burn'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"cancelOwnershipHandover"`.
 */
export function usePrepareSoundEditionV1_2CancelOwnershipHandover(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof soundEditionV1_2ABI,
      'cancelOwnershipHandover'
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'cancelOwnershipHandover',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'cancelOwnershipHandover'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"completeOwnershipHandover"`.
 */
export function usePrepareSoundEditionV1_2CompleteOwnershipHandover(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof soundEditionV1_2ABI,
      'completeOwnershipHandover'
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'completeOwnershipHandover',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'completeOwnershipHandover'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"emitAllMetadataUpdate"`.
 */
export function usePrepareSoundEditionV1_2EmitAllMetadataUpdate(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof soundEditionV1_2ABI,
      'emitAllMetadataUpdate'
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'emitAllMetadataUpdate',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'emitAllMetadataUpdate'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"freezeMetadata"`.
 */
export function usePrepareSoundEditionV1_2FreezeMetadata(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'freezeMetadata'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'freezeMetadata',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'freezeMetadata'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"grantRoles"`.
 */
export function usePrepareSoundEditionV1_2GrantRoles(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'grantRoles'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'grantRoles',
    ...config,
  } as UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'grantRoles'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"initialize"`.
 */
export function usePrepareSoundEditionV1_2Initialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'initialize'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'initialize'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"mint"`.
 */
export function usePrepareSoundEditionV1_2Mint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'mint'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'mint'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"renounceOwnership"`.
 */
export function usePrepareSoundEditionV1_2RenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof soundEditionV1_2ABI,
      'renounceOwnership'
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"renounceRoles"`.
 */
export function usePrepareSoundEditionV1_2RenounceRoles(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'renounceRoles'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'renounceRoles',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'renounceRoles'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"requestOwnershipHandover"`.
 */
export function usePrepareSoundEditionV1_2RequestOwnershipHandover(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof soundEditionV1_2ABI,
      'requestOwnershipHandover'
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'requestOwnershipHandover',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'requestOwnershipHandover'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"revokeRoles"`.
 */
export function usePrepareSoundEditionV1_2RevokeRoles(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'revokeRoles'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'revokeRoles',
    ...config,
  } as UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'revokeRoles'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function usePrepareSoundEditionV1_2SafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof soundEditionV1_2ABI,
      'safeTransferFrom'
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'safeTransferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"samBurn"`.
 */
export function usePrepareSoundEditionV1_2SamBurn(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'samBurn'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'samBurn',
    ...config,
  } as UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'samBurn'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"samMint"`.
 */
export function usePrepareSoundEditionV1_2SamMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'samMint'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'samMint',
    ...config,
  } as UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'samMint'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function usePrepareSoundEditionV1_2SetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof soundEditionV1_2ABI,
      'setApprovalForAll'
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setBaseURI"`.
 */
export function usePrepareSoundEditionV1_2SetBaseUri(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'setBaseURI'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'setBaseURI',
    ...config,
  } as UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'setBaseURI'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setContractURI"`.
 */
export function usePrepareSoundEditionV1_2SetContractUri(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'setContractURI'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'setContractURI',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'setContractURI'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setEditionCutoffTime"`.
 */
export function usePrepareSoundEditionV1_2SetEditionCutoffTime(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof soundEditionV1_2ABI,
      'setEditionCutoffTime'
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'setEditionCutoffTime',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'setEditionCutoffTime'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setEditionMaxMintableRange"`.
 */
export function usePrepareSoundEditionV1_2SetEditionMaxMintableRange(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof soundEditionV1_2ABI,
      'setEditionMaxMintableRange'
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'setEditionMaxMintableRange',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'setEditionMaxMintableRange'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setFundingRecipient"`.
 */
export function usePrepareSoundEditionV1_2SetFundingRecipient(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof soundEditionV1_2ABI,
      'setFundingRecipient'
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'setFundingRecipient',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'setFundingRecipient'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setMetadataModule"`.
 */
export function usePrepareSoundEditionV1_2SetMetadataModule(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof soundEditionV1_2ABI,
      'setMetadataModule'
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'setMetadataModule',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'setMetadataModule'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setMintRandomnessEnabled"`.
 */
export function usePrepareSoundEditionV1_2SetMintRandomnessEnabled(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof soundEditionV1_2ABI,
      'setMintRandomnessEnabled'
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'setMintRandomnessEnabled',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'setMintRandomnessEnabled'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setOperatorFilteringEnabled"`.
 */
export function usePrepareSoundEditionV1_2SetOperatorFilteringEnabled(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof soundEditionV1_2ABI,
      'setOperatorFilteringEnabled'
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'setOperatorFilteringEnabled',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'setOperatorFilteringEnabled'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setRoyalty"`.
 */
export function usePrepareSoundEditionV1_2SetRoyalty(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'setRoyalty'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'setRoyalty',
    ...config,
  } as UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'setRoyalty'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"setSAM"`.
 */
export function usePrepareSoundEditionV1_2SetSam(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'setSAM'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'setSAM',
    ...config,
  } as UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'setSAM'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareSoundEditionV1_2TransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'transferFrom'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"transferOwnership"`.
 */
export function usePrepareSoundEditionV1_2TransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof soundEditionV1_2ABI,
      'transferOwnership'
    >,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"withdrawERC20"`.
 */
export function usePrepareSoundEditionV1_2WithdrawErc20(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'withdrawERC20'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'withdrawERC20',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof soundEditionV1_2ABI,
    'withdrawERC20'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `functionName` set to `"withdrawETH"`.
 */
export function usePrepareSoundEditionV1_2WithdrawEth(
  config: Omit<
    UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'withdrawETH'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: soundEditionV1_2ABI,
    functionName: 'withdrawETH',
    ...config,
  } as UsePrepareContractWriteConfig<typeof soundEditionV1_2ABI, 'withdrawETH'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__.
 */
export function useSoundEditionV1_2Event<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, TEventName>,
    'abi'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    ...config,
  } as UseContractEventConfig<typeof soundEditionV1_2ABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"Airdropped"`.
 */
export function useSoundEditionV1_2AirdroppedEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'Airdropped'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'Airdropped',
    ...config,
  } as UseContractEventConfig<typeof soundEditionV1_2ABI, 'Airdropped'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"Approval"`.
 */
export function useSoundEditionV1_2ApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'Approval'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof soundEditionV1_2ABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"ApprovalForAll"`.
 */
export function useSoundEditionV1_2ApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'ApprovalForAll'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof soundEditionV1_2ABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"BaseURISet"`.
 */
export function useSoundEditionV1_2BaseUriSetEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'BaseURISet'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'BaseURISet',
    ...config,
  } as UseContractEventConfig<typeof soundEditionV1_2ABI, 'BaseURISet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"BatchMetadataUpdate"`.
 */
export function useSoundEditionV1_2BatchMetadataUpdateEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'BatchMetadataUpdate'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'BatchMetadataUpdate',
    ...config,
  } as UseContractEventConfig<
    typeof soundEditionV1_2ABI,
    'BatchMetadataUpdate'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"ConsecutiveTransfer"`.
 */
export function useSoundEditionV1_2ConsecutiveTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'ConsecutiveTransfer'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'ConsecutiveTransfer',
    ...config,
  } as UseContractEventConfig<
    typeof soundEditionV1_2ABI,
    'ConsecutiveTransfer'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"ContractURISet"`.
 */
export function useSoundEditionV1_2ContractUriSetEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'ContractURISet'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'ContractURISet',
    ...config,
  } as UseContractEventConfig<typeof soundEditionV1_2ABI, 'ContractURISet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"ERC20Withdrawn"`.
 */
export function useSoundEditionV1_2Erc20WithdrawnEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'ERC20Withdrawn'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'ERC20Withdrawn',
    ...config,
  } as UseContractEventConfig<typeof soundEditionV1_2ABI, 'ERC20Withdrawn'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"ETHWithdrawn"`.
 */
export function useSoundEditionV1_2EthWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'ETHWithdrawn'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'ETHWithdrawn',
    ...config,
  } as UseContractEventConfig<typeof soundEditionV1_2ABI, 'ETHWithdrawn'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"EditionCutoffTimeSet"`.
 */
export function useSoundEditionV1_2EditionCutoffTimeSetEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'EditionCutoffTimeSet'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'EditionCutoffTimeSet',
    ...config,
  } as UseContractEventConfig<
    typeof soundEditionV1_2ABI,
    'EditionCutoffTimeSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"EditionMaxMintableRangeSet"`.
 */
export function useSoundEditionV1_2EditionMaxMintableRangeSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof soundEditionV1_2ABI,
      'EditionMaxMintableRangeSet'
    >,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'EditionMaxMintableRangeSet',
    ...config,
  } as UseContractEventConfig<
    typeof soundEditionV1_2ABI,
    'EditionMaxMintableRangeSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"FundingRecipientSet"`.
 */
export function useSoundEditionV1_2FundingRecipientSetEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'FundingRecipientSet'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'FundingRecipientSet',
    ...config,
  } as UseContractEventConfig<
    typeof soundEditionV1_2ABI,
    'FundingRecipientSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"MetadataFrozen"`.
 */
export function useSoundEditionV1_2MetadataFrozenEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'MetadataFrozen'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'MetadataFrozen',
    ...config,
  } as UseContractEventConfig<typeof soundEditionV1_2ABI, 'MetadataFrozen'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"MetadataModuleSet"`.
 */
export function useSoundEditionV1_2MetadataModuleSetEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'MetadataModuleSet'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'MetadataModuleSet',
    ...config,
  } as UseContractEventConfig<typeof soundEditionV1_2ABI, 'MetadataModuleSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"MintRandomnessEnabledSet"`.
 */
export function useSoundEditionV1_2MintRandomnessEnabledSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof soundEditionV1_2ABI,
      'MintRandomnessEnabledSet'
    >,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'MintRandomnessEnabledSet',
    ...config,
  } as UseContractEventConfig<
    typeof soundEditionV1_2ABI,
    'MintRandomnessEnabledSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"Minted"`.
 */
export function useSoundEditionV1_2MintedEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'Minted'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'Minted',
    ...config,
  } as UseContractEventConfig<typeof soundEditionV1_2ABI, 'Minted'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"OperatorFilteringEnablededSet"`.
 */
export function useSoundEditionV1_2OperatorFilteringEnablededSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof soundEditionV1_2ABI,
      'OperatorFilteringEnablededSet'
    >,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'OperatorFilteringEnablededSet',
    ...config,
  } as UseContractEventConfig<
    typeof soundEditionV1_2ABI,
    'OperatorFilteringEnablededSet'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"OwnershipHandoverCanceled"`.
 */
export function useSoundEditionV1_2OwnershipHandoverCanceledEvent(
  config: Omit<
    UseContractEventConfig<
      typeof soundEditionV1_2ABI,
      'OwnershipHandoverCanceled'
    >,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'OwnershipHandoverCanceled',
    ...config,
  } as UseContractEventConfig<
    typeof soundEditionV1_2ABI,
    'OwnershipHandoverCanceled'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"OwnershipHandoverRequested"`.
 */
export function useSoundEditionV1_2OwnershipHandoverRequestedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof soundEditionV1_2ABI,
      'OwnershipHandoverRequested'
    >,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'OwnershipHandoverRequested',
    ...config,
  } as UseContractEventConfig<
    typeof soundEditionV1_2ABI,
    'OwnershipHandoverRequested'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"OwnershipTransferred"`.
 */
export function useSoundEditionV1_2OwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'OwnershipTransferred'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<
    typeof soundEditionV1_2ABI,
    'OwnershipTransferred'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"RolesUpdated"`.
 */
export function useSoundEditionV1_2RolesUpdatedEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'RolesUpdated'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'RolesUpdated',
    ...config,
  } as UseContractEventConfig<typeof soundEditionV1_2ABI, 'RolesUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"RoyaltySet"`.
 */
export function useSoundEditionV1_2RoyaltySetEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'RoyaltySet'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'RoyaltySet',
    ...config,
  } as UseContractEventConfig<typeof soundEditionV1_2ABI, 'RoyaltySet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"SAMSet"`.
 */
export function useSoundEditionV1_2SamSetEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'SAMSet'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'SAMSet',
    ...config,
  } as UseContractEventConfig<typeof soundEditionV1_2ABI, 'SAMSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"SoundEditionInitialized"`.
 */
export function useSoundEditionV1_2SoundEditionInitializedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof soundEditionV1_2ABI,
      'SoundEditionInitialized'
    >,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'SoundEditionInitialized',
    ...config,
  } as UseContractEventConfig<
    typeof soundEditionV1_2ABI,
    'SoundEditionInitialized'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link soundEditionV1_2ABI}__ and `eventName` set to `"Transfer"`.
 */
export function useSoundEditionV1_2TransferEvent(
  config: Omit<
    UseContractEventConfig<typeof soundEditionV1_2ABI, 'Transfer'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: soundEditionV1_2ABI,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof soundEditionV1_2ABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenboundRegistryABI}__.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x02101dfB77FDE026414827Fdc604ddAF224F0921)
 */
export function useTokenboundRegistryRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof tokenboundRegistryABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof tokenboundRegistryABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > & { chainId?: keyof typeof tokenboundRegistryAddress } = {} as any,
) {
  return useContractRead({
    abi: tokenboundRegistryABI,
    address: tokenboundRegistryAddress[10],
    ...config,
  } as UseContractReadConfig<
    typeof tokenboundRegistryABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link tokenboundRegistryABI}__ and `functionName` set to `"account"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x02101dfB77FDE026414827Fdc604ddAF224F0921)
 */
export function useTokenboundRegistryAccount<
  TFunctionName extends 'account',
  TSelectData = ReadContractResult<typeof tokenboundRegistryABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof tokenboundRegistryABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenboundRegistryAddress } = {} as any,
) {
  return useContractRead({
    abi: tokenboundRegistryABI,
    address: tokenboundRegistryAddress[10],
    functionName: 'account',
    ...config,
  } as UseContractReadConfig<
    typeof tokenboundRegistryABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenboundRegistryABI}__.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x02101dfB77FDE026414827Fdc604ddAF224F0921)
 */
export function useTokenboundRegistryWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof tokenboundRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof tokenboundRegistryABI,
          string
        >['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<
        typeof tokenboundRegistryABI,
        TFunctionName,
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<typeof tokenboundRegistryABI, TFunctionName, TMode>({
    abi: tokenboundRegistryABI,
    address: tokenboundRegistryAddress[10],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenboundRegistryABI}__ and `functionName` set to `"createAccount"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x02101dfB77FDE026414827Fdc604ddAF224F0921)
 */
export function useTokenboundRegistryCreateAccount<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof tokenboundRegistryAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof tokenboundRegistryABI,
          'createAccount'
        >['request']['abi'],
        'createAccount',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'createAccount'
      }
    : UseContractWriteConfig<
        typeof tokenboundRegistryABI,
        'createAccount',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'createAccount'
      } = {} as any,
) {
  return useContractWrite<typeof tokenboundRegistryABI, 'createAccount', TMode>(
    {
      abi: tokenboundRegistryABI,
      address: tokenboundRegistryAddress[10],
      functionName: 'createAccount',
      ...config,
    } as any,
  )
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenboundRegistryABI}__.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x02101dfB77FDE026414827Fdc604ddAF224F0921)
 */
export function usePrepareTokenboundRegistryWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenboundRegistryABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof tokenboundRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: tokenboundRegistryABI,
    address: tokenboundRegistryAddress[10],
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof tokenboundRegistryABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenboundRegistryABI}__ and `functionName` set to `"createAccount"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x02101dfB77FDE026414827Fdc604ddAF224F0921)
 */
export function usePrepareTokenboundRegistryCreateAccount(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof tokenboundRegistryABI,
      'createAccount'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenboundRegistryAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: tokenboundRegistryABI,
    address: tokenboundRegistryAddress[10],
    functionName: 'createAccount',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof tokenboundRegistryABI,
    'createAccount'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenboundRegistryABI}__.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x02101dfB77FDE026414827Fdc604ddAF224F0921)
 */
export function useTokenboundRegistryEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof tokenboundRegistryABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof tokenboundRegistryAddress } = {} as any,
) {
  return useContractEvent({
    abi: tokenboundRegistryABI,
    address: tokenboundRegistryAddress[10],
    ...config,
  } as UseContractEventConfig<typeof tokenboundRegistryABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenboundRegistryABI}__ and `eventName` set to `"AccountCreated"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x02101dfB77FDE026414827Fdc604ddAF224F0921)
 */
export function useTokenboundRegistryAccountCreatedEvent(
  config: Omit<
    UseContractEventConfig<typeof tokenboundRegistryABI, 'AccountCreated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof tokenboundRegistryAddress } = {} as any,
) {
  return useContractEvent({
    abi: tokenboundRegistryABI,
    address: tokenboundRegistryAddress[10],
    eventName: 'AccountCreated',
    ...config,
  } as UseContractEventConfig<typeof tokenboundRegistryABI, 'AccountCreated'>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenboundAccountABI}__.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2d25602551487c3f3354dd80d76d54383a243358)
 */
export function useTokenboundAccountWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof tokenboundAccountAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof tokenboundAccountABI,
          string
        >['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<
        typeof tokenboundAccountABI,
        TFunctionName,
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<typeof tokenboundAccountABI, TFunctionName, TMode>({
    abi: tokenboundAccountABI,
    address: tokenboundAccountAddress[10],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link tokenboundAccountABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2d25602551487c3f3354dd80d76d54383a243358)
 */
export function useTokenboundAccountInitialize<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof tokenboundAccountAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof tokenboundAccountABI,
          'initialize'
        >['request']['abi'],
        'initialize',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }
    : UseContractWriteConfig<
        typeof tokenboundAccountABI,
        'initialize',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<typeof tokenboundAccountABI, 'initialize', TMode>({
    abi: tokenboundAccountABI,
    address: tokenboundAccountAddress[10],
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenboundAccountABI}__.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2d25602551487c3f3354dd80d76d54383a243358)
 */
export function usePrepareTokenboundAccountWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenboundAccountABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof tokenboundAccountAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: tokenboundAccountABI,
    address: tokenboundAccountAddress[10],
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof tokenboundAccountABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link tokenboundAccountABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2d25602551487c3f3354dd80d76d54383a243358)
 */
export function usePrepareTokenboundAccountInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof tokenboundAccountABI, 'initialize'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof tokenboundAccountAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: tokenboundAccountABI,
    address: tokenboundAccountAddress[10],
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<typeof tokenboundAccountABI, 'initialize'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenboundAccountABI}__.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2d25602551487c3f3354dd80d76d54383a243358)
 */
export function useTokenboundAccountEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof tokenboundAccountABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof tokenboundAccountAddress } = {} as any,
) {
  return useContractEvent({
    abi: tokenboundAccountABI,
    address: tokenboundAccountAddress[10],
    ...config,
  } as UseContractEventConfig<typeof tokenboundAccountABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenboundAccountABI}__ and `eventName` set to `"AdminChanged"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2d25602551487c3f3354dd80d76d54383a243358)
 */
export function useTokenboundAccountAdminChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof tokenboundAccountABI, 'AdminChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof tokenboundAccountAddress } = {} as any,
) {
  return useContractEvent({
    abi: tokenboundAccountABI,
    address: tokenboundAccountAddress[10],
    eventName: 'AdminChanged',
    ...config,
  } as UseContractEventConfig<typeof tokenboundAccountABI, 'AdminChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenboundAccountABI}__ and `eventName` set to `"BeaconUpgraded"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2d25602551487c3f3354dd80d76d54383a243358)
 */
export function useTokenboundAccountBeaconUpgradedEvent(
  config: Omit<
    UseContractEventConfig<typeof tokenboundAccountABI, 'BeaconUpgraded'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof tokenboundAccountAddress } = {} as any,
) {
  return useContractEvent({
    abi: tokenboundAccountABI,
    address: tokenboundAccountAddress[10],
    eventName: 'BeaconUpgraded',
    ...config,
  } as UseContractEventConfig<typeof tokenboundAccountABI, 'BeaconUpgraded'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link tokenboundAccountABI}__ and `eventName` set to `"Upgraded"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2d25602551487c3f3354dd80d76d54383a243358)
 */
export function useTokenboundAccountUpgradedEvent(
  config: Omit<
    UseContractEventConfig<typeof tokenboundAccountABI, 'Upgraded'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof tokenboundAccountAddress } = {} as any,
) {
  return useContractEvent({
    abi: tokenboundAccountABI,
    address: tokenboundAccountAddress[10],
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<typeof tokenboundAccountABI, 'Upgraded'>)
}
